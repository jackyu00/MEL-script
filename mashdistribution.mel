



global proc mashdistributionDoit()
 {
	 
	//string $instObjs[] = { "mesh", "pCube1", "pSphere1" };
	//float $weights[] = {0.1, 0.1, 0.5};
	
	string $instObjs[] = `textScrollList -q -ai instanceTaregtTSL`;	
	if( size($instObjs) < 1 )
		return;
	
    int $i;
	float $weights[];
    for( $i=0; $i<size($instObjs); $i++ )
		$weights[$i] = 1.0/size($instObjs);  
			

	int $instcount = `intFieldGrp -q -value1 instanceNumIFG`;		
	float $bias = `floatField -q -value normalUpBiasFF`;
	$bias = 1 - $bias;
	string $landscape = `textFieldButtonGrp -q -text landscapeTFBG`;
	if( !`objExists $landscape` )
			error ($landscape+" doesn't exist!");
		
	
	string $distributeMap = `textFieldButtonGrp -q -text distributeMapTFBG`;
	
	
	
	string $instancer = `createNode "instancer"`;
	string $pyscript = "";

    for( $i=0; $i<size($instObjs); $i++ )    
        connectAttr -f ($instObjs[$i]+".matrix") ($instancer+".inputHierarchy["+$i+"]");    
     
    string $mashwaiter = `createNode "MASH_Waiter"`;     
    //connectAttr -f ($mashwaiter+".instancerMessage") ($instancer+".instancerMessage");
    connectAttr -f ($mashwaiter+".outputPoints") ($instancer+".inputPoints");
     
    string $mashrandom = `createNode "MASH_Random"`;
    connectAttr -f ($mashrandom+".outputPoints") ($mashwaiter+".inputPoints");
    setAttr ($mashrandom+".transformationSpace") 2;
    setAttr ($mashrandom+".absoluteScale") 1;
    setAttr ($mashrandom+".uniformRandom") 1;
    setAttr ($mashrandom+".rotationY") 180;
    setAttr ($mashrandom+".rotationX") 10;
    setAttr ($mashrandom+".rotationZ") 10;
         
	// create python node and set the script

	float $sum = 0;
	for($i=0; $i<size($weights); $i++)
			$sum += $weights[$i];
		
	for($i=0; $i<size($weights); $i++)
			$weights[$i] = $weights[$i]/$sum;

	string $s, $c;
	$pyscript += "import openMASH\n";
	$pyscript += "import MASH.api as mapi\n";
	$pyscript += "import maya.api.OpenMaya as om\n";
	$pyscript += "import math\n";
	$pyscript += "import random\n";
	
	$pyscript += "md = openMASH.MASHData(thisNode)\n";
	$pyscript += "frame = md.getFrame()\n";
	$pyscript += "count = md.count()\n";
	
	$pyscript += ("bias = "+$bias+"\n");
	$pyscript += ("up = om.MVector  (0,90,0)\n");

	$pyscript += ("for i in range(count):\n");
    $pyscript += ("    md.outRotation[i] = md.rotation[i]*bias + up*(1-bias)\n");
    $pyscript += ("    random.seed(i)\n");
    $pyscript += ("    r = random.random()\n");
    $pyscript += ("    md.outId[i] = 0\n");
	
	float $a, $b, $d;
	for($i=0; $i<size($weights); $i++)
	{		
		if($i==0)
			$a = 0;
		else
			$a = $d;
		$d += $weights[$i];
		if($i==(size($weights)-1))
			$b = 1;
		else
			$b = $d;
		$pyscript += ("    if r>="+$a+" and r<"+$b+" :\n");
		$pyscript += ("        md.outId[i] = "+$i+"\n");		
	}	
	
	$pyscript += ("md.setData()");	

    string $mashpython = `createNode "MASH_Python"`;
    connectAttr -f ($mashpython+".outputPoints") ($mashrandom+".inputPoints");
	setAttr -type "string" ($mashpython+".pyScript") $pyscript;
     
	// create visibility node
    string $mashvisibility = `createNode "MASH_Visibility"`;
    connectAttr -f ($mashvisibility+".outputPoints") ($mashpython+".inputPoints");
     
	// create distribute node
    string $mashdistribute = `createNode "MASH_Distribute"`;
    setAttr ($mashdistribute+".arrangement") 4;
    setAttr ($mashdistribute+".pointCount") $instcount; 
    connectAttr -f ($mashdistribute+".outputPoints") ($mashvisibility+".inputPoints");
    connectAttr -f ($mashdistribute+".waiterMessage") ($mashwaiter+".waiterMessage");
    string $tmp[] = `listRelatives -s $landscape`;
    connectAttr -f ($tmp[0]+".worldMesh[0]") ($mashdistribute+".inputMesh");
     
	// create file node
    string $file = `createNode "file"`;
    connectAttr -f ($file+".outColor") ($mashvisibility+".mColour");
    $distributeMap = fromNativePath($distributeMap);
    setAttr -type "string" ($file+".fileTextureName") $distributeMap;
     

}

global proc getDistributeMap( string $selectType )
{
	string $startFolder = `textFieldButtonGrp -q -tx $selectType`; 
	string $result[] = `fileDialog2 -dialogStyle 2 -fileMode 1 -startingDirectory $startFolder -okCaption "Select" -cancelCaption ""`; 
	if( size($result[0]) > 0 )
	{
		// update UI
		$result[0] = toNativePath($result[0]);
		if( size($result[0]) > 0 )
			textFieldButtonGrp -e -tx $result[0] $selectType;
	}
	else
		return;
}

global proc addInstanceTaregt()
{
	string $items[]=`textScrollList -q -ai instanceTaregtTSL`;
	string $sel[]=`ls -sl`;
	string $addItem[]=stringArrayRemove($items,$sel);
	for ( $i=0;$i<size($addItem);$i++ )
	{
		string $shapes[1] = `listRelatives -s $addItem[$i]`;
		string $apitype[2] = `ls -st $shapes[0]`;
		if (  $apitype[1] == "mesh" )
			textScrollList -e -a $addItem[$i] instanceTaregtTSL;	
	}
}

global proc removeInstanceTaregt()
{
	string $del[]=`textScrollList -q -si instanceTaregtTSL`;	
	for ( $i=0;$i<size($del);$i++ )
		textScrollList -e -ri $del[$i] instanceTaregtTSL;
}

global proc mashdistribution()
{			
    if ( `window -ex dynamicHairTool` )    
	       deleteUI dynamicHairTool;	
	
	if ( `windowPref -ex dynamicHairTool` )    
		windowPref -remove dynamicHairTool;
	
		   
	string $window = `window -menuBar true -widthHeight 260 300 -t "Mash Distribute Tool" dynamicHairTool`;	
	frameLayout -l "Select objects to distribute:" -mh 10 -mw 10;
	
		columnLayout;	
			
			textScrollList -sc "string $sel[] = `textScrollList -q -si instanceTaregtTSL`;select $sel;" -ams 1 -height 100 -width 235 instanceTaregtTSL;
				
			rowLayout -nc 2 -cw2 120 120;
				button -al "center" -w 120 -l "Add" -c addInstanceTaregt;
				button -al "center" -w 120 -l "Remove" -c removeInstanceTaregt;
			setParent ..;			
			
			intFieldGrp -numberOfFields 1 -cw2 90 70 -label "Instance Number" -value1 100 instanceNumIFG;						

			rowLayout -nc 2 -cw2 90 70;
				text -label "Normal/Up bias";
				floatField -pre 2 -minValue -0.0 -maxValue 1.0 -value 0.95 normalUpBiasFF;
			setParent ..;
			
			textFieldButtonGrp -cw3 90 70 150 -label "Landscape Geo" -buttonLabel "Get" -bc "string $selObj[]=`ls -sl`;textFieldButtonGrp -e -text $selObj[0] landscapeTFBG;" landscapeTFBG;
  
			textFieldButtonGrp -label "Distribute Map" -bc "getDistributeMap \"distributeMapTFBG\"" -cw3 90 70 150 -text "" -buttonLabel "Select" distributeMapTFBG;
			
			text -l "" -h 20;
			
			button -h 20 -w 235 -l "Distribute" -c "mashdistributionDoit";
		setParent ..;
	setParent ..;
		

	showWindow $window;
}

